-- CITY
DROP TABLE "NEPTIS".CITY;
create table "NEPTIS".CITY
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	REGION VARCHAR(50) not null,
	UNIQUE ("NAME", "REGION")
);

DROP TABLE "NEPTIS".ATTRACTION_C;
create table "NEPTIS".ATTRACTION_C
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	CITY BIGINT not null,
	UNIQUE ("NAME", "CITY"),
    FOREIGN KEY(CITY) REFERENCES CITY(ID)
);



-- MUSEUM
DROP TABLE "NEPTIS".MUSEUM;
create table "NEPTIS".MUSEUM
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	CITY BIGINT not null,
	UNIQUE ("NAME", "CITY"),
	FOREIGN KEY(CITY) REFERENCES CITY(ID)
);

DROP TABLE "NEPTIS".AREA_M;
create table "NEPTIS".AREA_M
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	MUSEUM BIGINT not null,
	UNIQUE ("NAME", "MUSEUM"),
	FOREIGN KEY(MUSEUM) REFERENCES MUSEUM(ID)
);

DROP TABLE "NEPTIS".ATTRACTION_M;
create table "NEPTIS".ATTRACTION_M
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	AREA_M BIGINT not null,
	UNIQUE ("NAME", "AREA_M"),
	FOREIGN KEY(AREA_M) REFERENCES AREA_M(ID)
);



-- OPENED AIR MUSEUM
DROP TABLE "NEPTIS".OAM;
create table "NEPTIS".OAM
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	CITY BIGINT not null,
	UNIQUE ("NAME", "CITY"),
	FOREIGN KEY(CITY) REFERENCES CITY(ID)
);

DROP TABLE "NEPTIS".AREA_OAM;
create table "NEPTIS".AREA_OAM
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	OAM BIGINT not null,
	UNIQUE ("NAME", "OAM"),
	FOREIGN KEY(OAM) REFERENCES OAM(ID)
);

DROP TABLE "NEPTIS".ATTRACTION_OAM;
create table "NEPTIS".ATTRACTION_OAM
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	NAME VARCHAR(50) not null,
	AREA_OAM BIGINT not null,
	UNIQUE ("NAME", "AREA_OAM"),
	FOREIGN KEY(AREA_OAM) REFERENCES AREA_OAM(ID)
);



-- ADMIN
DROP TABLE "NEPTIS".ADMIN;
create table "NEPTIS".ADMIN
(
	NAME VARCHAR(50) not null,
	SURNAME VARCHAR(50) not null,
	BADGEID VARCHAR(50) not null primary key,
	EMAIL VARCHAR(50) not null,
	PASSWORD VARCHAR(50) not null
);



-- USER
DROP TABLE "NEPTIS".USERS;
create table "NEPTIS".USERS
(
	NAME VARCHAR(50) not null,
	SURNAME VARCHAR(50) not null,
	EMAIL VARCHAR(50) not null primary key,
	PASSWORD VARCHAR(50) not null
);



-- TCODA
DROP TABLE "NEPTIS".TCODA;
create table "NEPTIS".TCODA
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	MINUTES int not null,
	ATTRACTION_C BIGINT,
	ATTRACTION_M BIGINT,
	ATTRACTION_OAM BIGINT,
	AREA_M BIGINT,
	AREA_OAM BIGINT,
	FOREIGN KEY(ATTRACTION_C) REFERENCES ATTRACTION_C(ID),
	FOREIGN KEY(ATTRACTION_M) REFERENCES ATTRACTION_M(ID),
    FOREIGN KEY(ATTRACTION_OAM) REFERENCES ATTRACTION_OAM(ID),
	FOREIGN KEY(AREA_M) REFERENCES AREA_M(ID),
	FOREIGN KEY(AREA_OAM) REFERENCES AREA_OAM(ID)
);



-- TVISITA
DROP TABLE "NEPTIS".TVISITA;
create table "NEPTIS".TVISITA
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	MINUTES int not null,
	ATTRACTION_C BIGINT,
	ATTRACTION_M BIGINT,
	ATTRACTION_OAM BIGINT,
	FOREIGN KEY(ATTRACTION_C) REFERENCES ATTRACTION_C(ID),
	FOREIGN KEY(ATTRACTION_M) REFERENCES ATTRACTION_M(ID),
    FOREIGN KEY(ATTRACTION_OAM) REFERENCES ATTRACTION_OAM(ID)

);

-- TMOVEAT (attrazioni)
DROP TABLE "NEPTIS".TMOVEAT;
create table "NEPTIS".TMOVEAT
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	MINUTES int not null,
	ATTRACTION_C1 BIGINT,
	ATTRACTION_M1 BIGINT,
	ATTRACTION_OAM1 BIGINT,
	ATTRACTION_C2 BIGINT,
	ATTRACTION_M2 BIGINT,
	ATTRACTION_OAM2 BIGINT,
	FOREIGN KEY(ATTRACTION_C1) REFERENCES ATTRACTION_C(ID),
	FOREIGN KEY(ATTRACTION_C2) REFERENCES ATTRACTION_C(ID),
	FOREIGN KEY(ATTRACTION_M1) REFERENCES ATTRACTION_M(ID),
	FOREIGN KEY(ATTRACTION_M2) REFERENCES ATTRACTION_M(ID),
	FOREIGN KEY(ATTRACTION_OAM1) REFERENCES ATTRACTION_OAM(ID),
	FOREIGN KEY(ATTRACTION_OAM2) REFERENCES ATTRACTION_OAM(ID)
     
);

-- TMOVEAR (aree)
DROP TABLE "NEPTIS".TMOVEAR;
create table "NEPTIS".TMOVEAR
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	MINUTES int not null,
	AREA_M1 BIGINT,
	AREA_OAM1 BIGINT,
	AREA_M2 BIGINT,
	AREA_OAM2 BIGINT,
	FOREIGN KEY(AREA_M1) REFERENCES AREA_M(ID),
	FOREIGN KEY(AREA_OAM1) REFERENCES AREA_OAM(ID),
	FOREIGN KEY(AREA_M2) REFERENCES AREA_M(ID),
	FOREIGN KEY(AREA_OAM2) REFERENCES AREA_OAM(ID)
);


-- TMOVEAA (attrazione-area) --> ** NB: da fissare nel parser anche il percorso contrario (area-attrazione) **
DROP TABLE "NEPTIS".TMOVEAA;
create table "NEPTIS".TMOVEAA
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	MINUTES int not null,
	ATTRACTION_C BIGINT,
	ATTRACTION_M BIGINT,
	ATTRACTION_OAM BIGINT,
	AREA_M BIGINT,
	AREA_OAM BIGINT,
	FOREIGN KEY(ATTRACTION_C) REFERENCES ATTRACTION_C(ID),
	FOREIGN KEY(ATTRACTION_M) REFERENCES ATTRACTION_M(ID),
	FOREIGN KEY(ATTRACTION_OAM) REFERENCES ATTRACTION_OAM(ID),
	FOREIGN KEY(AREA_M) REFERENCES AREA_M(ID),
	FOREIGN KEY(AREA_OAM) REFERENCES AREA_OAM(ID)
	
);


-- SENSING
DROP TABLE "NEPTIS".SENSING;
create table "NEPTIS".SENSING
(
	ID BIGINT not null primary key GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1),
	DATA TIMESTAMP not null,
	TCODA BIGINT,
	TVISITA BIGINT,
	TMOVEAT BIGINT,
	TMOVEAR BIGINT,
	TMOVEAA BIGINT,
	FOREIGN KEY(TCODA) REFERENCES TCODA(ID),
	FOREIGN KEY(TVISITA) REFERENCES TVISITA(ID),
	FOREIGN KEY(TMOVEAT) REFERENCES TMOVEAT(ID),
	FOREIGN KEY(TMOVEAR) REFERENCES TMOVEAR(ID),
	FOREIGN KEY(TMOVEAA) REFERENCES TMOVEAA(ID)

);

-- DROP INDEX ?
CREATE INDEX index_timestamp ON "NEPTIS".SENSING(DATA);


